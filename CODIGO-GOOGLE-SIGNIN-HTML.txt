===========================================
üîê C√ìDIGO PARA GOOGLE SIGN-IN EN HTML
===========================================

‚ö†Ô∏è IMPORTANTE: Reemplaza 'TU_GOOGLE_CLIENT_ID' con tu Client ID real


===========================================
1. A√ëADIR EN client-dashboard/index.html
===========================================

A. EN EL <head>, a√±ade esta l√≠nea:

<script src="https://accounts.google.com/gsi/client" async defer></script>


B. REEMPLAZA la variable GOOGLE_CLIENT_ID (busca esta l√≠nea):

// Busca esto:
const GOOGLE_CLIENT_ID = 'TU_GOOGLE_CLIENT_ID';

// Reempl√°zalo con tu Client ID real:
const GOOGLE_CLIENT_ID = '123456789-abcdefg.apps.googleusercontent.com';


C. A√ëADE este c√≥digo despu√©s del bot√≥n de "Iniciar Sesi√≥n" normal:

<!-- Divisor OR -->
<div style="display: flex; align-items: center; margin: 20px 0;">
    <div style="flex: 1; height: 1px; background: #e8eaed;"></div>
    <span style="padding: 0 15px; color: #999; font-size: 0.9rem;">O</span>
    <div style="flex: 1; height: 1px; background: #e8eaed;"></div>
</div>

<!-- Bot√≥n de Google Sign-In -->
<div id="googleSignInButton" style="display: flex; justify-content: center; margin: 20px 0;"></div>

<!-- Bot√≥n de Google alternativo (si One-Tap no funciona) -->
<button type="button" id="googleLoginBtn" onclick="loginWithGoogle()" style="width: 100%; padding: 14px; border: 1px solid #e8eaed; border-radius: 10px; background: white; color: #333; font-size: 1rem; font-weight: 600; cursor: pointer; display: flex; align-items: center; justify-content: center; gap: 10px; transition: all 0.3s ease; margin-bottom: 10px;">
    <img src="https://developers.google.com/identity/images/g-logo.png" alt="Google" style="width: 20px; height: 20px;">
    Continuar con Google
</button>


D. A√ëADE estas funciones JavaScript (busca donde est√°n las otras funciones y a√±ade estas):

// ============================================
// üîê AUTENTICACI√ìN CON GOOGLE
// ============================================

// Inicializar Google Sign-In
function initGoogleSignIn() {
    if (typeof google === 'undefined') {
        console.warn('‚ö†Ô∏è Google Sign-In library not loaded');
        return;
    }
    
    // Configurar el bot√≥n de Google One-Tap
    google.accounts.id.initialize({
        client_id: GOOGLE_CLIENT_ID,
        callback: handleGoogleSignIn,
        auto_select: false,
        cancel_on_tap_outside: true
    });
    
    // Renderizar el bot√≥n
    google.accounts.id.renderButton(
        document.getElementById('googleSignInButton'),
        {
            theme: 'outline',
            size: 'large',
            width: 400,
            text: 'signin_with',
            shape: 'rectangular',
            logo_alignment: 'left'
        }
    );
    
    console.log('‚úÖ Google Sign-In inicializado');
}

// Manejar respuesta de Google
async function handleGoogleSignIn(response) {
    try {
        console.log('üîê Iniciando sesi√≥n con Google...');
        
        // Mostrar loader
        document.getElementById('loginBtn').disabled = true;
        document.getElementById('loginBtn').textContent = 'Iniciando sesi√≥n...';
        
        // Enviar token al backend
        const result = await fetch(`${API_URL}/api/auth/google`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                credential: response.credential
            })
        });
        
        const data = await result.json();
        
        if (data.success && data.user) {
            console.log('‚úÖ Autenticaci√≥n exitosa con Google');
            
            // Guardar sesi√≥n
            currentClient = data.user;
            localStorage.setItem('currentClient', JSON.stringify(data.user));
            
            // Mostrar dashboard
            await showDashboard();
            
        } else {
            throw new Error(data.error || 'Error en autenticaci√≥n');
        }
        
    } catch (error) {
        console.error('‚ùå Error con Google Sign-In:', error);
        alert('Error al iniciar sesi√≥n con Google. Por favor, intenta de nuevo.');
        
        // Restaurar bot√≥n
        document.getElementById('loginBtn').disabled = false;
        document.getElementById('loginBtn').textContent = 'Iniciar Sesi√≥n';
    }
}

// Login con Google (bot√≥n alternativo)
function loginWithGoogle() {
    if (typeof google === 'undefined') {
        alert('Google Sign-In no est√° disponible. Por favor, recarga la p√°gina.');
        return;
    }
    
    google.accounts.id.prompt();
}

// Inicializar cuando cargue la p√°gina
document.addEventListener('DOMContentLoaded', () => {
    setTimeout(initGoogleSignIn, 1000);
});


===========================================
2. A√ëADIR EN formulario-membresia.html
===========================================

A. EN EL <head>, a√±ade esta l√≠nea:

<script src="https://accounts.google.com/gsi/client" async defer></script>


B. REEMPLAZA la variable GOOGLE_CLIENT_ID:

const GOOGLE_CLIENT_ID = '123456789-abcdefg.apps.googleusercontent.com';


C. A√ëADE este c√≥digo en el formulario, ANTES del input de email:

<!-- Secci√≥n de Google Sign-In -->
<div style="background: #f0f9ff; border: 2px solid #0046FE; border-radius: 12px; padding: 25px; margin-bottom: 30px; text-align: center;">
    <h3 style="margin: 0 0 15px 0; color: #0046FE; font-size: 1.2rem;">
        ‚ö° Registro R√°pido con Google
    </h3>
    <p style="margin: 0 0 20px 0; color: #666; font-size: 0.95rem;">
        Completa tu registro en segundos usando tu cuenta de Google
    </p>
    
    <!-- Bot√≥n de Google One-Tap -->
    <div id="googleSignInButton" style="display: flex; justify-content: center; margin-bottom: 15px;"></div>
    
    <!-- Bot√≥n alternativo -->
    <button type="button" onclick="signUpWithGoogle()" style="width: 100%; max-width: 400px; padding: 14px; border: 1px solid #e8eaed; border-radius: 10px; background: white; color: #333; font-size: 1rem; font-weight: 600; cursor: pointer; display: flex; align-items: center; justify-content: center; gap: 10px; margin: 0 auto;">
        <img src="https://developers.google.com/identity/images/g-logo.png" alt="Google" style="width: 20px; height: 20px;">
        Registrarme con Google
    </button>
    
    <p style="margin: 15px 0 0 0; color: #999; font-size: 0.85rem;">
        üí° Tus datos se completar√°n autom√°ticamente
    </p>
</div>

<!-- Divisor -->
<div style="display: flex; align-items: center; margin: 30px 0;">
    <div style="flex: 1; height: 1px; background: #e8eaed;"></div>
    <span style="padding: 0 15px; color: #999; font-size: 0.9rem;">O completa el formulario manualmente</span>
    <div style="flex: 1; height: 1px; background: #e8eaed;"></div>
</div>


D. A√ëADE estas funciones JavaScript:

// ============================================
// üîê REGISTRO CON GOOGLE
// ============================================

// Inicializar Google Sign-In para registro
function initGoogleSignUp() {
    if (typeof google === 'undefined') {
        console.warn('‚ö†Ô∏è Google Sign-In library not loaded');
        return;
    }
    
    google.accounts.id.initialize({
        client_id: GOOGLE_CLIENT_ID,
        callback: handleGoogleSignUp,
        auto_select: false,
        cancel_on_tap_outside: true
    });
    
    google.accounts.id.renderButton(
        document.getElementById('googleSignInButton'),
        {
            theme: 'outline',
            size: 'large',
            width: 400,
            text: 'signup_with',
            shape: 'rectangular',
            logo_alignment: 'left'
        }
    );
    
    console.log('‚úÖ Google Sign-Up inicializado');
}

// Manejar registro con Google
async function handleGoogleSignUp(response) {
    try {
        console.log('üîê Registrando con Google...');
        
        // Enviar token al backend
        const result = await fetch(`${API_URL}/api/auth/google`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                credential: response.credential
            })
        });
        
        const data = await result.json();
        
        if (data.success && data.user) {
            console.log('‚úÖ Registro exitoso con Google');
            
            // Pre-llenar formulario con datos de Google
            document.getElementById('account_email').value = data.user.email || '';
            document.getElementById('account_first_name').value = data.user.first_name || '';
            document.getElementById('account_last_name').value = data.user.last_name || '';
            
            // Si tiene foto de perfil, mostrarla
            if (data.user.picture) {
                console.log('üì∑ Foto de perfil de Google:', data.user.picture);
            }
            
            // Marcar que viene de Google
            window.googleUser = data.user;
            
            // Scroll al siguiente paso
            document.getElementById('account_email').scrollIntoView({ behavior: 'smooth', block: 'center' });
            
            // Mostrar mensaje de √©xito
            alert('‚úÖ ¬°Cuenta vinculada con Google! Completa los datos restantes para continuar.');
            
        } else {
            throw new Error(data.error || 'Error en registro');
        }
        
    } catch (error) {
        console.error('‚ùå Error con Google Sign-Up:', error);
        alert('Error al registrarse con Google. Por favor, intenta de nuevo.');
    }
}

// Bot√≥n de registro con Google (alternativo)
function signUpWithGoogle() {
    if (typeof google === 'undefined') {
        alert('Google Sign-In no est√° disponible. Por favor, recarga la p√°gina.');
        return;
    }
    
    google.accounts.id.prompt();
}

// Inicializar cuando cargue la p√°gina
document.addEventListener('DOMContentLoaded', () => {
    setTimeout(initGoogleSignUp, 1000);
});


===========================================
3. ENDPOINT EN server.js
===========================================

A√±ade esto en backend/server.js despu√©s de los otros endpoints de auth:

const googleAuth = require('./google-auth');

// ============================================
// üîê AUTENTICACI√ìN CON GOOGLE
// ============================================

app.post('/api/auth/google', async (req, res) => {
    try {
        const { credential } = req.body;
        
        if (!credential) {
            return res.status(400).json({ error: 'Token de Google requerido' });
        }
        
        console.log('üîê [GOOGLE AUTH] Verificando token de Google...');
        
        // Verificar token de Google
        const googleData = await googleAuth.verifyGoogleToken(credential);
        console.log('‚úÖ [GOOGLE AUTH] Token verificado:', googleData.email);
        
        // Obtener o crear usuario
        const user = await googleAuth.getOrCreateGoogleUser(googleData, db);
        console.log('‚úÖ [GOOGLE AUTH] Usuario autenticado:', user.email);
        
        // Retornar datos del usuario (sin contrase√±a)
        const { password, ...userData } = user;
        
        res.json({
            success: true,
            user: userData,
            message: 'Autenticaci√≥n exitosa con Google'
        });
        
    } catch (error) {
        console.error('‚ùå [GOOGLE AUTH] Error:', error);
        res.status(401).json({ 
            error: 'Error en autenticaci√≥n con Google',
            details: error.message 
        });
    }
});


===========================================
4. RESUMEN
===========================================

‚úÖ Dashboard (login):
   - Bot√≥n "Continuar con Google"
   - One-Tap autom√°tico
   - Login instant√°neo

‚úÖ Formulario (registro):
   - Bot√≥n "Registrarme con Google"
   - Pre-llena email y nombre
   - Vincula cuenta autom√°ticamente

‚úÖ Backend:
   - Verifica tokens con Google
   - Crea usuarios autom√°ticamente
   - Vincula cuentas existentes

üéâ ¬°Sistema completo de Google OAuth!

